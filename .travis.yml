language: node_js
node_js: stable
env:
  global:
    - COMMIT=${TRAVIS_COMMIT::6}
before_install:
  - npm install -g @angular/cli
sudo: required
services:
- docker
script:
- ng build --prod
after_success:
- if [ "$TRAVIS_BRANCH" = "master" -a "$TRAVIS_PULL_REQUEST" = "false" ]; then export REPO=inyee/workloads-dashboard;
   docker login -u "$DOCKER_USER" -p "$DOCKER_PASS" && docker build -t $REPO:$COMMIT . && docker push $REPO; 
  fi
- if [ "$TRAVIS_BRANCH" = "mongo-cstor" -a "$TRAVIS_PULL_REQUEST" = "false" ]; then export REPO=inyee/mongo-cstor-dashboard;
   docker login -u "$DOCKER_USER" -p "$DOCKER_PASS" && docker build -t $REPO:$COMMIT . && docker push $REPO; 
  fi
- if [ "$TRAVIS_BRANCH" = "percona-cstor" -a "$TRAVIS_PULL_REQUEST" = "false" ]; then export REPO=inyee/percona-cstor-dashboard;
   docker login -u "$DOCKER_USER" -p "$DOCKER_PASS" && docker build -t $REPO:$COMMIT . && docker push $REPO; 
  fi
- if [ "$TRAVIS_BRANCH" = "percona-jiva" -a "$TRAVIS_PULL_REQUEST" = "false" ]; then export REPO=inyee/percona-jiva-dashboard;
   docker login -u "$DOCKER_USER" -p "$DOCKER_PASS" && docker build -t $REPO:$COMMIT . && docker push $REPO; 
  fi
- if [ "$TRAVIS_BRANCH" = "mongo-jiva" -a "$TRAVIS_PULL_REQUEST" = "false" ]; then export REPO=inyee/mongo-jiva-dashboard;
   docker login -u "$DOCKER_USER" -p "$DOCKER_PASS" && docker build -t $REPO:$COMMIT . && docker push $REPO; 
  fi
- if [ "$TRAVIS_BRANCH" = "grafana-cstor" -a "$TRAVIS_PULL_REQUEST" = "false" ]; then export REPO=inyee/grafana-cstor-dashboard;
   docker login -u "$DOCKER_USER" -p "$DOCKER_PASS" && docker build -t $REPO:$COMMIT . && docker push $REPO; 
  fi    
- if [ "$TRAVIS_BRANCH" = "prometheus-cstor" -a "$TRAVIS_PULL_REQUEST" = "false" ]; then export REPO=inyee/prometheus-cstor-dashboard;
   docker login -u "$DOCKER_USER" -p "$DOCKER_PASS" && docker build -t $REPO:$COMMIT . && docker push $REPO; 
  fi
- if [ "$TRAVIS_BRANCH" = "wordpress-cstor" -a "$TRAVIS_PULL_REQUEST" = "false" ]; then export REPO=inyee/wordpress-cstor-dashboard;
   docker login -u "$DOCKER_USER" -p "$DOCKER_PASS" && docker build -t $REPO:$COMMIT . && docker push $REPO; 
  fi      